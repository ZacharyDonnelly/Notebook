generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Post {
  id          Int      @id @default(autoincrement())
  userId      Int      @map("user_id")
  title       String
  content     String?
  published   Boolean  @default(false)
  createdAt   DateTime @default(now()) @map(name: "created_at")
  updatedAt   DateTime @default(now()) @map(name: "updated_at")

  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@map("posts")
}

model Account {
  id                 Int  @id @default(autoincrement())
  userId             Int  @map("user_id")
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  createdAt          DateTime @default(now()) @map(name: "created_at")
  updatedAt          DateTime @default(now()) @map(name: "updated_at")

  user               User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           Int      @id @default(autoincrement())
  userId       Int      @map("user_id")
  expires      DateTime
  sessionToken String   @unique
  createdAt    DateTime @default(now()) @map(name: "created_at")
  updatedAt    DateTime @default(now()) @map(name: "updated_at")
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}
model User {
  id            Int       @id @default(autoincrement())
  name          String
  email         String    @unique
  emailVerified DateTime? @map("email_verified")
  password      String?
  image         String?
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @default(now()) @map(name: "updated_at")
  posts         Post[]
  accounts      Account[]
  sessions      Session[]

  @@map("users")
}
